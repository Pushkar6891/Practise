1. What is the difference between a constructor (no return type, same name as class name,overloading is possible) and a method
2. What is the purpose of garbage collection and its use
3. What is an abstract class
4. What is the difference between interface and abstract class
5. What are the various features of different versions of Java
6. What are the supported platforms by Java
7. What are different OOPS features
8. How Java enables High Performance
9. What is JVM 
10. List some of the Java IDEs
11. List some Java keywords
12. What is Object
13. Define Class
14. What is Local Variable
15. What is Instance Variable
16. What is Class Variable / Static Variable
17. What is Singleton Class
18. What is Constructor
19. What sre the types of Constructors
20. List the steps for Creating an Object
21. What are different Access Modifier?
22. Which operator has highest precedence? () [] {}
23. What is enum
24. Variables used in Switch can be which data type? (byte, short, int, char, string, enum)
25. When parseInt can be used? String to int
26. Why String is immutable in Java? (String object can be shared amongst multiple threads)
27. Why StringBuffer is immutable in Java? (If we want to make changes to String Objects)
28. What is finalize() method (called just before garbage collecton or object destruction)
29. What is an Exception
30. What are Checked Exception (FileNotFoundException)
31. What are main subclasses under Exception Class (IOException and RunTimeException)
32. What is throw and throws
33. How finally is used
34. Define Inheritance (one object acquires properties of another class) 
35. When is super keyword used
36. What is Polymorphism (Parent Class reference is used to access child class object)
37. When are Abstract Methods used
38. What is Encapsulation (providing access using public methods) or Data Hiding
39. What is an Interface 
40. List some features of interfaces (no constructor, all methods are public abstract, all variables are public static final)
41. Why packages are used (prevent naming conflicts)
42. What is multi-theaded program
43. What are different ways of creating Threads
44. What is an applet
45. An applet extends which class
46. Explain Garbage Collection in Java
47. Define Immutable Object (Eg String, Wrapper Classes)
48. Explain Set Interface
49. Explain TreeSet
50. Difference between throw and throws
51. Explain exception propagation
52. Explain public static void main(String args[])
53. Define JDK, JRE, JVM?
54. What is difference between JAR vs WAR vs EAR
55. Can a constructor be made final (no)
56. What is static block
57. What is Method Overloading (same method name but different parameters)
58. What is Method Overriding (subclass provides implementation of parent class method)
59. What is Difference between Method Overloading and Method Overriding
60. What is final class
61. What is NullPointerException
62. How Multithreading takes place in a single CPU (CPU Schedular switches between multiple tasks)
63. What invokes a Thread's run() 
64. What are Wrapper Classes
65. What is the difference between static and non-static variables (static variables are associated with class and non-static variables take unique values with each object)
66. What are usecases
67. Explain use of Subclass in Java
68. Swing (Light weight components) vs AWT (heavy weight components)
69. Is there any limitation of using Inheritance
70. When an ArrayStoreException is thrown
71. Can a class call multiple cnstructors
72. When is ArithmeticException thrown in Java
73. Does Garbage Collection guarantee that a program will not run out of memory
74. break vs continue 
75. private variable can only be accesses within
76. primitive Java Types (8)
77. What class of exceptions generated by Java Run-Time System (Runtime and Error Exceptions
78. Under what condition is finalize() called
79. Default value of boolean : false
80. What are class loaders
81. What will happen if static modifier is removed from public static void main(String args[]) (no such method error)
82. Can a top level class be private or protected (no only public or no modifier)
83. What is the use of Wrapper Classes
84. Error vs Exception
85. What is Runtime Polymorphism or Dynamix Dispatch
86. What is Dynamic Binding and Late Binding
87. Can Constructor be inherited
88. ArrayList advantage over Array
89. Why deletion in LinkedList is faster than ArrayList
90. How to decide what to use ArrayList or LinkedList
91. What is a dot operator 
92. How to use a private constructor 
93. What is Type Casting
94. What is cohesion and coupling
95. Describe Thead Lifecycle
96. Range of Data Types
97. Which number is denoted by leading zeroes in java (Octal numbers)
98. Where import statement is allowed to be used import statement
99. Explain suspend() in Thread class
100. Define Network Programming 
101. What is Socket Programming
102. Advantages of Sockets
103. Why Generics are used in Java
104. Why we need not import java.lang package  
105. What is Daemon Thread
106. Which method is used to create a Daemon Thread (setDaemon)
107. Which method must be implemented by all Threads (run)
108. Can a class declared as private be accessed outside its package
109. Upcasting and DownCasting in Java
110. inner class vs nested class
111. Restrictions on Method Overriding
112. What is Constructor Chaining
113. Difference between Checked and Unchecked Exception
114. How to print an array in java (Arrays.toString() vs Arrays.deepToString())
115. Sort a Collection (TreeSet/TreeMap and a Comparable/Comparator)
116. final vs finally vs finalize
117. "=="(refernce comparison) and equals(content comparison)
118. JDK vs JRE vs JVM vs JIT(byte code into native code)
